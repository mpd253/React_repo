{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.methd : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: JSON.stringify(requestConfig.body)\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n\n      // const loadedTasks = [];\n\n      // for (const taskKey in data) {\n      //   loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      // }\n\n      // setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","requestConfig","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","methd","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/2019A00298/Desktop/React/React_repo/08-onwards-to-a-more-realistic-example/src/components/hooks/use-http.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useHttp = (requestConfig, applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        requestConfig.url, {\r\n          method: requestConfig.method ? requestConfig.methd : 'GET',\r\n          headers: requestConfig.headers ?  requestConfig.headers : {},\r\n          body: JSON.stringify(requestConfig.body)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Request failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n\r\n      // const loadedTasks = [];\r\n\r\n      // for (const taskKey in data) {\r\n      //   loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n      // }\r\n\r\n      // setTasks(loadedTasks);\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    sendRequest: sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAGA,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1BV,aAAa,CAACW,GAAG,EAAE;QACjBC,MAAM,EAAEZ,aAAa,CAACY,MAAM,GAAGZ,aAAa,CAACa,KAAK,GAAG,KAAK;QAC1DC,OAAO,EAAEd,aAAa,CAACc,OAAO,GAAId,aAAa,CAACc,OAAO,GAAG,CAAC,CAAC;QAC5DC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,aAAa,CAACe,IAAI;MACzC,CACF,CAAC;MAED,IAAI,CAACN,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCpB,SAAS,CAACmB,IAAI,CAAC;;MAEf;;MAEA;MACA;MACA;;MAEA;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EACf,CAAC;AACH,CAAC;AAACL,EAAA,CAzCIH,OAAO;AA2Cb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}